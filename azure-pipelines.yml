# Ruby
# Package your Ruby project.
# Add steps that install rails, analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/ruby

name: $(SourceBranchName)-$(Build.SourceVersion)$(rev:.r)

trigger:
  batch: true
  branches:
    include:
      - devops
      - develop

pr:
  autoCancel: true
  branches:
    include:
      - devops
      - develop
      - feature/*

variables:
  application.name: 'et-admin'
  azure.subscription.endpoint: 'hmcts-pet'

jobs:

- job: ExtractAssets
  pool:
    vmImage: 'Ubuntu-16.04'
  steps:

    - bash: |
        repo_sha=$(git rev-parse --verify HEAD)
        docker_image_tag_sha=${repo_sha:0:7}
        echo "##vso[task.setvariable variable=DOCKER_TAG;isOutput=true]$(Build.SourceBranchName)${docker_image_tag_sha}"
      displayName: 'Get Docker Tag'
      name: 'getDockerTagTemp'

    - task: Docker@1
      displayName: 'Build an image'
      inputs:
        imageName: '$(application.name):$(getDockerTagTemp.DOCKER_TAG)'

    - task: Docker@1
      displayName: 'Run an image'
      inputs:
        command: 'Run an image'
        imageName: '$(application.name):$(getDockerTagTemp.DOCKER_TAG)'
        containerName: 'ASSET_CONTAINER'

    - bash: |
        mkdir -p temp_assets
        docker cp ASSET_CONTAINER:/usr/src/app/public/assets ./temp_assets
        docker stop ASSET_CONTAINER
        cd temp_assets/assets
        docker rm ASSET_CONTAINER
        # cd ../../ && rm -rf temp_assets
      displayName: 'Get Assets'
      name: 'getAssets'

<<<<<<< HEAD
    - task: AzureFileCopy@3
      displayName: 'AzureBlob File Copy'
=======
    - task: AzureFileCopy@1
>>>>>>> 1158fdd61952afc3481b44dfdab86e7c068186c5
      inputs:
        SourcePath: './temp_assets/assets'
        azureSubscription: 'hmcts-pet'
        Destination: 'AzureBlob'
        storage: 'bbea327e42bedevet'
        ContainerName: 'assets'

- job: BuildAndPushImage
  pool:
    name: hmcts-pet  # name of the pool to run this job in
  steps:

  - bash: |
      repo_sha=$(git rev-parse --verify HEAD)
      docker_image_tag_sha=${repo_sha:0:7}
      echo "##vso[task.setvariable variable=DOCKER_TAG;isOutput=true]$(Build.SourceBranchName)-${docker_image_tag_sha}"
    displayName: 'Get Docker Tag'
    name: 'getDockerTag'

  - task: Docker@1
    displayName: login
    inputs:
      azureSubscriptionEndpoint: '$(azure.subscription.endpoint)'
      azureContainerRegistry: $(azure.container.registry)
      command: login

  - task: Docker@1
    displayName: 'Build an image'
    inputs:
      imageName: '$(application.name):$(getDockerTag.DOCKER_TAG)'
      arguments: '--build-arg APPVERSION=$(getDockerTag.DOCKER_TAG) --build-arg APP_BUILD_TAG=$(Build.SourceBranchName)-$(Build.SourceVersion) --build-arg APP_GIT_COMMIT=$(Build.SourceVersion)'

  - task: Docker@1
    displayName: 'Tag image'
    inputs:
      azureSubscriptionEndpoint: '$(azure.subscription.endpoint)'
      azureContainerRegistry: $(azure.container.registry)
      command: 'Tag image'
      imageName: '$(application.name):$(getDockerTag.DOCKER_TAG)'
    
  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: '$(azure.subscription.endpoint)'
      azureContainerRegistry: $(azure.container.registry)
      command: 'Push an image'
      imageName: '$(application.name):$(getDockerTag.DOCKER_TAG)'

  - task: Docker@1
    displayName: logout
    inputs:
      command: logout